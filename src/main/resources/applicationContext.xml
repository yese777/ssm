<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd">

    <!-- service层开始 -->
    <!-- 配置@Service类的包扫描 -->
    <context:component-scan base-package="com.yese.service"/>
    <!-- 事务相关开始 -->
    <!-- 事务管理器 -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <!-- 数据源 -->
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!-- 声明式事务 -->
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <!-- 给哪些方法配置事务 -->
        <tx:attributes>
            <!-- propagation:传播行为,默认是propagation="REQUIRED" -->
            <tx:method name="save*"/>
            <tx:method name="insert*"/>
            <tx:method name="add*"/>
            <tx:method name="create*"/>
            <tx:method name="delete*"/>
            <tx:method name="update*"/>

            <tx:method name="find*" read-only="true"/>
            <tx:method name="select*" read-only="true"/>
            <tx:method name="get*" read-only="true"/>
            <tx:method name="query*" read-only="true"/>

            <!--<tx:method name="*"/>-->
        </tx:attributes>
    </tx:advice>
    <!-- 配置aop切面 -->
    <aop:config>
        <aop:pointcut expression="execution(* com.yese.service.*.*(..))" id="pointcut"/>
        <!-- 切入声明式事务 -->
        <aop:advisor advice-ref="txAdvice" pointcut-ref="pointcut"/>
    </aop:config>
    <!-- 事务相关结束 -->
    <!-- service层结束 -->

    <!-- ====================================================================================================== -->
    <!-- dao层开始 -->
    <!-- 加载jdbc.properties文件 -->
    <context:property-placeholder location="classpath:jdbc.properties"/>
    <!-- 配置druid数据源 -->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
        <property name="driverClassName" value="${jdbc.driver}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
        <!-- 初始化连接大小 -->
        <property name="initialSize" value="${initialSize}"/>
        <!-- 连接池最大数量 -->
        <property name="maxActive" value="${maxActive}"/>
        <!-- 连接池最大空闲 -->
        <!-- <property name="maxIdle" value="${maxIdle}"/> -->
        <!-- 连接池最小空闲 -->
        <property name="minIdle" value="${minIdle}"/>
        <!-- 获取连接最大等待时间 -->
        <property name="maxWait" value="${maxWait}"/>

        <property name="validationQuery" value="${validationQuery}"/>
        <property name="testWhileIdle" value="${testWhileIdle}"/>
        <property name="testOnBorrow" value="${testOnBorrow}"/>
        <property name="testOnReturn" value="${testOnReturn}"/>
    </bean>

    <!--约定大于配置-->
    <!-- 配置SqlSessionFactory -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!-- 设置数据源 -->
        <property name="dataSource" ref="dataSource"/>
        <!-- 别名包扫描,别名不区分大小写 --><!-- pojo的包名,多个用;隔开 -->
        <property name="typeAliasesPackage" value="com.yese.pojo"/>
        <!--扫描mapper.xml-->
        <property name="mapperLocations" value="classpath:mapper/*.xml"/>

        <!--pageHelper插件-->
        <property name="plugins">
            <array>
                <bean class="com.github.pagehelper.PageInterceptor">
                    <property name="properties">
                        <!--使用下面的方式配置参数，一行配置一个,params=value1形式 -->
                        <value>
                            <!--helperDialect=mysql默认自动检测,可以手动指定-->
                            reasonable=true
                            supportMethodsArguments=true
                            params=count=countSql
                            autoRuntimeDialect=true<!--允许在运行时根据多数据源自动识别对应方言的分页-->
                        </value>
                    </property>
                </bean>
            </array>
        </property>
    </bean>

    <!-- 扫描mapper接口 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!-- Mapper的包名,多个包时用","或";"分隔 -->
        <property name="basePackage" value="com.yese.mapper"/>
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
    </bean>
    <!-- dao层结束 -->


</beans>